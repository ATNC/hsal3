version: '3.8'

services:
  telegraf:
    container_name: telegraf
    image: telegraf:1.29-alpine
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'
    networks:
      - tig_network

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./influxdb/init:/docker-entrypoint-initdb.d  # Assuming initialization scripts if needed
      - influxdb_data:/var/lib/influxdb
    networks:
      - tig_network

  grafana:
    image: grafana/grafana:8.0.2
    env_file: configuration.env
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - tig_network

  app:
    build: ./app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./app:/app
    networks:
      - tig_network
    depends_on:
      - mongodb
  mongodb:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    ports:
      - '27017:27017'
    networks:
      - tig_network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - tig_network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '8000:80'
      - '80:80'
    depends_on:
      - app
    networks:
      - tig_network

volumes:
  grafana_data:
  influxdb_data:
  mongodb_data:
  elasticsearch_data:

networks:
  tig_network:
